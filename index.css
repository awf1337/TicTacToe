* {
    box-sizing: border-box;
}

:root {
	--cl-primary : rgb(67, 40, 138);
	--cl-secondary : #FFE900;
	--cl-grid: #02d0a7;
	--cl-white : rgb(255, 255, 255);
	--cl-primary-hover : #CBB9FC;
}

body {
    margin: 0;  
	color: var(--cl-white);
	-webkit-touch-callout: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Layout */
main {
    background-color: var(--cl-primary);
    height: 100vh;
}

.mainContainer{
	width: 330px;
	overflow: hidden;
	margin: 50px auto 0 auto;
}

.mainContainer div {
	color: var(--cl-secondary);
	font-family: 'Splash', sans-serif;
}

.mainContainer span,
.menuGame span{
	display: block;
	text-align: center;
	font-family: sans-serif;
	font-size: 40px;
	margin-bottom: 40px;
}

.mainContainer .box,
.mainContainer .boxNoHover {
	float: left;
	width: 100px;
	height: 100px;
	border: 2px solid var(--cl-grid);
	transition: all .35s ease-in-out;
	font-size: 85px;
	text-align: center;
	line-height: 100px; 
	cursor: pointer;
  }

.mainContainer .box:hover{
	background: var(--cl-primary-hover);
	color: var(--cl-primary);
}


/* Buttons */
.btn {
	width: 200px;
	padding: .70em 0;
	color: var(--cl-white);
	font-weight: bold;
	cursor: pointer;
	font-size: 15px;
	display: block;
	letter-spacing: .1em;
	margin: 10px auto;
	-webkit-box-shadow: 0px 0px 13px 0px rgba(0,0,0,0.75);
	-moz-box-shadow: 0px 0px 13px 0px rgba(0,0,0,0.75);
	box-shadow: 0px 0px 13px 0px rgba(0, 0, 0, 0.75);
}

.btn:hover {
	color: var(--cl-secondary);
}

.btnSymbols {
	width: unset;
	padding: .1em .5em;
	font-size: 1.3rem;
}

.btnDoneStart {
	font-size: 1rem;
	padding: .2em 1em;
}

.btn .boxBtn  {
	width: 100px;
	height: 1em;
	background-color: red;
}

#godModeSettings p {
	letter-spacing: .12em;
}

.win{
	background: var(--cl-primary-hover); 
	color: rgb(0, 94, 255);
}

.oapacitySet {
	opacity: 50%;
}

.menuGame {
    background-color: var(--cl-primary);
    position: fixed;
    width: 100%;
    height: 100%;
    z-index: 3;
}

.fixedHeightRender {
	height: 400px;
}

.godModeText {
	width: 100%;
	font-size: .9rem;
}

@media (min-width:768px) {
	.godModeText {
		width: 70%;
		font-size: 1rem;
	}
}

@media (max-width:768px) {
	.fixedHeightRender {
		margin-top: 85px ;
	}
}

#firstPlayerInput,
#secondPlayerInput {
	padding: 5px;
	width: 50px;
	background-color: transparent;
	border: 2px solid var(--cl-secondary);
	border-radius: 20px;
	text-align: center;
	color: var(--cl-white);
	box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;
}

#firstPlayerInput::placeholder,
#secondPlayerInput::placeholder {
	color: var(--cl-white);
	opacity: 50%;
	background-color: transparent;
	margin-top: 0;
}

#FirstPlayerSymbolX:focus,
#FirstPlayerSymbolO:focus,
#singlePlayer:focus,
#multiPlayer:focus,
#godMode:focus {
	background-color: var(--cl-secondary);
	color: var(--cl-primary);
}

/* gameSettings */
#secondPlayerSettings,
#firstPlayerSettings,
#singlePlayerSettings,
#godModeSettings {
    display: none;
}

/* Tic Tac Toe spans */
#tic,
#tac,
#toe {
	margin-bottom: 0;
	display: inline;
	font-size: 4rem;
	letter-spacing: .3rem;
}

/*BubbleUpEffects*/
.bubbleEffect {
    text-transform: uppercase;
    font-weight: bold;
    text-align: center;
    position: relative;
    overflow: hidden;
    transition: 0.5s;
}

.bubbleEffect span {
    position: absolute;
    width: 25%;
    height: 100%;
    background-color: var(--cl-secondary);
    transform: translateY(150%);
    border-radius: 50%;
    left: calc((var(--n) - 1) * 25%);
    transition: 0.5s;
    transition-delay: calc((var(--n) - 1) * 0.1s);
    z-index: -1;
}

.bubbleEffect:hover {
    color: var(--cl-primary);
}

.bubbleEffect:hover span {
    transform: translateY(-100%) scale(2);
}

.bubbleEffect span:nth-child(1) {
    --n: 1;
}

.bubbleEffect span:nth-child(2) {
    --n: 2;
}

.bubbleEffect span:nth-child(3) {
    --n: 3;
}

.bubbleEffect span:nth-child(4) {
    --n: 4;
}